# Purpose: Cosmos Cloud-optimized Dockerfile
# Context: Simple Node.js deployment for Cosmos Cloud routing

# Build stage
FROM --platform=$BUILDPLATFORM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage - simple Node.js server
FROM --platform=$TARGETPLATFORM node:18-alpine AS runner

WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 sveltekit

# Copy built application from builder stage
COPY --from=builder --chown=sveltekit:nodejs /app/build ./build
COPY --from=builder --chown=sveltekit:nodejs /app/package*.json ./
COPY --from=builder --chown=sveltekit:nodejs /app/static ./static

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Switch to non-root user
USER sveltekit

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV HOST=0.0.0.0

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Expose the port
EXPOSE 3000

# Start the SvelteKit application
CMD ["node", "build"]
